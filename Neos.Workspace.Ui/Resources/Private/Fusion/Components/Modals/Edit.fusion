prototype(Neos.Workspace.Ui:Component.Modal.Edit) < prototype(Neos.Fusion:Component) {
  workspaceName = ''
  workspaceTitle = ''
  workspaceDescription = ''
  baseWorkspaceName = ''

  workspaceHasChanges = false
  /// array<string, string>
  baseWorkspaceOptions = ${[]}

  roleAssignmentsVisible = false
  roleAssignmentsEditable = false
  /// array<userId: string, label: string>
  roleAssignmentUserOptions = ${[]}
  /// array<string>
  roleAssignmentGroupOptions = ${[]}
  /// array<\Neos\Workspace\Ui\ViewModel\EditWorkspaceRoleAssignment>
  roleAssignments = ${[]}

  @private {
    i18n = ${I18n.id('').source('Main').package('Neos.Workspace.Ui')}
    popoverId = 'workspace-edit-modal'
    workspaceTableRowId = ${'workspace-row-' + props.workspaceName}
  }

  prototype(Neos.Fusion.Form:LabelRenderer) {
    translationPackage = 'Neos.Workspace.Ui'
    translationSource = 'Main'
  }

  prototype(Neos.Fusion.Form:Neos.BackendModule.FieldContainer) {
    translation.label {
      package = 'Neos.Workspace.Ui'
      source = 'Main'
    }
  }

  renderer = afx`
    <div popover id={private.popoverId}>
      <header>
        <button
          type="button"
          class="neos-close neos-button"
          popovertarget={private.popoverId}
          popovertargetaction="close"
        >
          <Neos.Workspace.Ui:Component.Icon icon="times"/>
        </button>
        <div class="neos-header">
          {private.i18n.id('workspaces.editWorkspace').arguments([props.workspaceTitle])}
        </div>
      </header>
      <section>
        <Neos.Fusion.Form:Form
          form.target.action="update"
          form.target.format="htmx"
          form.target.arguments.workspaceName={props.workspaceName}
          attributes.class="neos-inline"
          attributes.hx-post={form.getTarget()}
          attributes.hx-disabled-elt="find button"
          attributes.hx-on--after-request={'document.getElementById("' + private.popoverId + '").hidePopover()'}
        >
          <fieldset>
            <Neos.Fusion.Form:Neos.BackendModule.FieldContainer
              field.name="title"
              field.value={props.workspaceTitle}
              label="workspaces.workspace.title"
              class="neos-control-group"
            >
              <Neos.Fusion.Form:Textfield
                attributes.required
                attributes.pattern="/^[\p{L}\p{P}\d \.]{1,200}$/u"
                attributes.autofocus
                attributes.placeholder={props.workspaceName}
              />
            </Neos.Fusion.Form:Neos.BackendModule.FieldContainer>

            <Neos.Fusion.Form:Neos.BackendModule.FieldContainer
              field.name="description"
              field.value={props.workspaceDescription}
              label="workspaces.workspace.description"
              class="neos-control-group"
            >
              <Neos.Fusion.Form:Textfield
                attributes.pattern="/^[\p{L}\p{P}\d \.]{0,500}$/u"
              />
            </Neos.Fusion.Form:Neos.BackendModule.FieldContainer>

            <Neos.Fusion.Form:Neos.BackendModule.FieldContainer
              field.name="baseWorkspace"
              field.value={props.baseWorkspaceName}
              label="workspaces.workspace.baseWorkspace"
              class="neos-control-group"
            >
              <Neos.Fusion.Form:Select
                attributes.disabled={props.workspaceHasChanges}
              >
                <Neos.Fusion:Loop items={props.baseWorkspaceOptions} itemName="workspaceTitle" itemKey="workspaceName">
                  <Neos.Fusion.Form:Select.Option
                    option.value={workspaceName}
                    attributes.selected={workspaceName == props.baseWorkspaceName}
                  >
                    {workspaceTitle}
                  </Neos.Fusion.Form:Select.Option>
                </Neos.Fusion:Loop>
              </Neos.Fusion.Form:Select>
              <!-- TODO: use component and styling -->
              <p
                style={{ marginTop: '.5em' }}
                @if.workspaceHasChanges={props.workspaceHasChanges}
              >
                <i
                  class="fas fa-exclamation-triangle"
                  style={{ color: 'var(--warningText)', marginRight: '.5em' }}
                ></i>{' '}
                {private.i18n.id('workspaces.cantChangeBaseWorkspaceBecauseWorkspaceContainsChanges')}
              </p>
            </Neos.Fusion.Form:Neos.BackendModule.FieldContainer>
          </fieldset>
          <fieldset @if.canView={props.roleAssignmentsVisible}>
            <legend>{private.i18n.id('workspaces.workspace.permissions')}</legend>
            <table class="workspace-table">
              <thead>
                <tr>
                  <th>{private.i18n.id('workspaces.workspace.workspaceRoleAssignment.subjectType')}</th>
                  <th>{private.i18n.id('workspaces.workspace.workspaceRoleAssignment.subject')}</th>
                  <th>{private.i18n.id('workspaces.workspace.workspaceRoleAssignment.role')}</th>
                  <th @if.canEdit={props.roleAssignmentsEditable}>
                    {private.i18n.id('workspaces.workspace.workspaceRoleAssignment.actions')}
                  </th>
                </tr>
              </thead>
              <tbody>
                <Neos.Fusion:Loop items={props.roleAssignments} itemName="roleAssignment">
                  <tr>
                    <td
                      title={roleAssignment.subjectTypeValue == 'USER' ? 'TODO user' : 'TODO users'}
                    >
                      <Neos.Workspace.Ui:Component.Icon
                        icon={roleAssignment.subjectTypeValue == 'USER' ? 'user' : 'users'}
                      />
                    </td>
                    <td>{roleAssignment.subjectLabel}</td>
                    <td>{roleAssignment.roleLabel}</td>
                    <td @if.canEdit={props.roleAssignmentsEditable}>
                      <button
                        type="button"
                        class="neos-button neos-button-danger"
                        title="remove"
                      >
                        <Neos.Workspace.Ui:Component.Icon icon="trash"/>
                      </button>
                    </td>
                  </tr>
                </Neos.Fusion:Loop>
              </tbody>
            </table>
            <button
              @if.canEdit={props.roleAssignmentsEditable}
              type="button"
              class="neos-button"
            >
              add
            </button>
          </fieldset>
          <footer>
            <button
              type="button"
              class="neos-button"
              popovertarget={private.popoverId}
              popovertargetaction="close"
            >
              {private.i18n.id('cancel', 'Cancel', [])}
            </button>
            <Neos.Fusion.Form:Button attributes.class="neos-button neos-button-primary">
              {private.i18n.id('applyChanges')}
            </Neos.Fusion.Form:Button>
          </footer>
        </Neos.Fusion.Form:Form>
      </section>
    </div>
  `
}
