Neos.Workspace.Ui.WorkspaceController.index = Neos.Fusion:Component {
  userWorkspace = ${userWorkspace}
  workspacesAndChangeCounts = ${workspacesAndChangeCounts}
  flashMessages = ${flashMessages}

  totalNumberOfWorkspaces = ${Array.length(this.workspacesAndChangeCounts)}
  numberOfPrivateWorkspaces = 0
  numberOfPublicWorkspaces = 0

  newAction = Neos.Fusion:UriBuilder {
    action = 'new'
  }

  htmxConfig = '[
    {"code": "204", "swap": false},
    {"code": "[23]..", "swap": true},
    {"code": "422", "swap": true},
    {"code": "[45]..", "swap": false, "error":true}
  ]'

  renderer = afx`
    <meta name="htmx-config" content={props.htmxConfig}/>
    <Neos.Workspace.Ui:Component.FlashMessages flashMessages={props.flashMessages}/>
    <main class="neos-content neos-container-fluid">
      <div class="neos-row-fluid">
        <div id="indicator" class="htmx-indicator loadingIndicator__container">
          <div class="loadingIndicator">
            <div class="loadingIndicator__bar"></div>
          </div>
        </div>
        <Neos.Workspace.Ui:Component.WorkspaceTable
          userWorkspace={props.userWorkspace}
          workspacesAndChangeCounts={props.workspacesAndChangeCounts}
        />
      </div>
    </main>
    <Neos.Workspace.Ui:Component.Footer>
      <a
        id="createButton"
        type="button"
        class="neos-button neos-button-success"
        href={props.newAction}
        @if={Security.hasAccess('Neos.Workspace.Ui:Backend.CreateWorkspaces')}
      >
        {I18n.translate('footer.action.create', 'Create new workspace', [], 'Main', 'Neos.Workspace.Ui')}
      </a>
      <div class="workspace-count">
        {I18n.translate('footer.workspaceCount', props.totalNumberOfWorkspaces + ' workspaces (' + props.numberOfPublicWorkspaces + ' public, ' + props.numberOfPrivateWorkspaces + ' private)', [props.numberOfPublicWorkspaces, props.numberOfPrivateWorkspaces], 'Main', 'Neos.Workspace.Ui')}
      </div>
    </Neos.Workspace.Ui:Component.Footer>
  `
}
